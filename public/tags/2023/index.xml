<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>2023 - Tag - Cryptax&#39;s hand bag</title>
        <link>https://cryptax.github.io/tags/2023/</link>
        <description>2023 - Tag - Cryptax&#39;s hand bag</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://cryptax.github.io/tags/2023/" rel="self" type="application/rss+xml" /><item>
    <title>Drone and secret message (THCon CTF 2023)</title>
    <link>https://cryptax.github.io/2023-04-22-drone/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>lud0</author>
    <guid>https://cryptax.github.io/2023-04-22-drone/</guid>
    <description><![CDATA[Description This challenge was in the Misc category.
1 2 3 4 5 6 7 8 9  While travelling to a conference in Paris, Herlock SholmÃ¨s sees a troubled police inspector. After asking him what was his problem, the inspector tells Herclock that he is trying to understand how two spies communicate with each other. Once every week both spies get on the Eiffel tower, but never get in speaking distance of each other.]]></description>
</item>
<item>
    <title>Nothing to Hide (THCon CTF 2023)</title>
    <link>https://cryptax.github.io/2023-04-22-nothingtohide/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2023-04-22-nothingtohide/</guid>
    <description><![CDATA[Description The challenge provides the following contract, and, same as the Welcome challenge, the goal is to &ldquo;unlock&rdquo; to get the flag.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  pragma solidity ^0.7.1; contract hidden { bool public isLocked; bytes32 private key; bool private other; uint256 private garbage = 88888888888; uint256 public useless; uint256 private bob; constructor() { //hidden } function unlock(bytes32 _something) public { require(other); if (key == _something) { isLocked = false; } } }   Solving the challenge Like in the previous challenge, to unlock, we need a key, except this time it is private:]]></description>
</item>
<item>
    <title>Spacial TOTP (Insomni&#39;hack CTF 2013)</title>
    <link>https://cryptax.github.io/2023-03-25-spacial/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2023-03-25-spacial/</guid>
    <description><![CDATA[Description &ldquo;I sealed my master phassphrase on this device and protected it using my own TOTP algorithm. Can you recover it ?
Once ready, come to the organizers desk to validate your solution on the device. (No connection to the device allowed)&rdquo;
Solution I didn&rsquo;t solve this challenge on my own, but with nice team work with another team mate :)
Overview of the device The device is a M5 Core (we used M5 Core Ink at Ph0wn CTF).]]></description>
</item>
<item>
    <title>Welcome (THCon CTF 2023)</title>
    <link>https://cryptax.github.io/2023-04-22-welcome/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2023-04-22-welcome/</guid>
    <description><![CDATA[Description The challenge provides the following contract, and the goal is to &ldquo;unlock&rdquo; to get the flag.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  pragma solidity ^0.7; contract welcome { bool public isLocked; string public key; constructor(string memory _key) { isLocked = true; _key = key; } function unlock(string memory _something) public { if (keccak256(abi.encodePacked(key)) == keccak256(abi.encodePacked(_something))) { isLocked = false; } } }   Setup The CTF provided a very nice tutorial to setup the THCONETH network:]]></description>
</item>
<item>
    <title>Welcome ... to Questionable Ethics (Insomni&#39;hack CTF 2023)</title>
    <link>https://cryptax.github.io/2023-03-25-shame/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2023-03-25-shame/</guid>
    <description><![CDATA[Actually, you&rsquo;re not that welcome&hellip; ;-) You&rsquo;ll understand why.
Update March 28, 2023. Solutions to protect your computer.
Description of the challenge &ldquo;Welcome to Insomnihack! No bruteforce is needed! Simply run the following command on the attached file, and wait for the flag (it should take up to 1 minute). docker-compose up Have fun!&quot;
The challenge also provided a docker-compose.yml file.
1 2 3 4 5 6 7  version: &#34;3.]]></description>
</item>
</channel>
</rss>
