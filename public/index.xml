<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Cryptax&#39;s hand bag</title>
        <link>https://cryptax.github.io/</link>
        <description>Cryptax&#39;s hand bag</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
            <atom:link href="https://cryptax.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Bad Primes - Hack.Lu CTF 2020</title>
    <link>https://cryptax.github.io/2020-10-28-badprimes/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2020-10-28-badprimes/</guid>
    <description><![CDATA[Bad Primes  86 solves Easy Category: Crypto Author: midao Description : &ldquo;I thought I understood the RSA primitive but apparently I generated the primitive&rsquo;s primes too primitively&hellip; &quot; 193 points  Understanding the issue The challenge comes with Python code which implements RSA encryption/decryption.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  #!]]></description>
</item>
<item>
    <title>BeLE - Hardwear.io 2022</title>
    <link>https://cryptax.github.io/2022-10-28-hardweario-bele/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2022-10-28-hardweario-bele/</guid>
    <description><![CDATA[BeLE - Hardwear.io CTF 2022 The challenge is named &ldquo;BeLE&rdquo; and says there are several BLE devices + provides a Bluetooth PCAP file.
PCAP file The PCAP file is small with only 5 packets.
 The first packet is a BLE Read Request to read the BLE characteristic with handle 0x2a  02 10 00 07 00 03 00 04 00 0a 2a 00
The second packet is a BLE Read Response.]]></description>
</item>
<item>
    <title>Callboy - Hack.Lu CTF 2020</title>
    <link>https://cryptax.github.io/2020-10-28-callboy/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2020-10-28-callboy/</guid>
    <description><![CDATA[Callboy  207 solves Baby Category: Misc Author: p4ck3to Description : &ldquo;Have you ever called a Callboy? No!? Then you should definitely try it. To make it a pleasant experience for you, we have recorded a call with our Callboy to help you get started, so that there is no embarrassing silence between you.  PS: do not forget the to wrap flag{} around the secret &quot;
 127 points  An overview of network packets The file we download is a network packet capture.]]></description>
</item>
<item>
    <title>Cobol OTP - Hack.Lu CTF 2019</title>
    <link>https://cryptax.github.io/2019-10-24-cobol/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2019-10-24-cobol/</guid>
    <description><![CDATA[Cobol OTP Category: Crypto Author: midao Level: easy Solves: 104
Thanks to R. who actually flagged it :)
Description To save the future you have to look at the past. Someone from the inside sent you an access code to a bank account with a lot of money. Can you handle the past and decrypt the code to save the future?
Attached file A zip is provided with:
 otp.cob: a program in Cobol out  1 2  Enter your message to encrypt: ï¿½ï¿½ï¿½y;dhuï¿½ï¿½Fï¿½]UjhCï¿½ï¿½-ï¿½1T`h&amp;ï¿½ï¿½Fï¿½1*T{_ï¿½ï¿½ï¿½p02J   Understanding the Cobol program We understand the Cobol program is performing XOR encryption using a key provided in a keyfille.]]></description>
</item>
<item>
    <title>Cyberwall - Cyber Security Rumble CTF 2020</title>
    <link>https://cryptax.github.io/2020-10-30-cyberwall/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2020-10-30-cyberwall/</guid>
    <description><![CDATA[Cyberwall  Category: web  &ldquo;We had problems with hackers, but now we got a enterprise firewall system build by a leading security company.&quot; with a link to http://chal.cybersecurityrumble.de:3812.
Web page http://chal.cybersecurityrumble.de:3812 The source code of the page reveals password rootpw1337:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  &lt;!DOCTYPE html&gt; &lt;html lang=&#34;de&#34;&gt; &lt;head&gt; &lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=UTF-8&#34;&gt; &lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;https://cryptax.github.io/static/login.]]></description>
</item>
<item>
    <title>draw.per - THCon 2021</title>
    <link>https://cryptax.github.io/2021-06-14-thcon/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2021-06-14-thcon/</guid>
    <description><![CDATA[Draw APK - THCon 2021  14 solves 249 points  First steps As the challenge creator tells me this app is &ldquo;based on a Trojan Horse&rdquo; and it is &ldquo;not recommended to install it on a real smartphone&rdquo;, even if there is actually &ldquo;no malicious payload&rdquo;, I am very reluctant at first to test the app, even in an emulator.
So, I start off with my favorite static analysis combination: DroidLysis and JEB.]]></description>
</item>
<item>
    <title>Drone and secret message (THCon CTF 2023)</title>
    <link>https://cryptax.github.io/2023-04-22-drone/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>lud0</author>
    <guid>https://cryptax.github.io/2023-04-22-drone/</guid>
    <description><![CDATA[Description This challenge was in the Misc category.
1 2 3 4 5 6 7 8 9  While travelling to a conference in Paris, Herlock Sholmès sees a troubled police inspector. After asking him what was his problem, the inspector tells Herclock that he is trying to understand how two spies communicate with each other. Once every week both spies get on the Eiffel tower, but never get in speaking distance of each other.]]></description>
</item>
<item>
    <title>Exploit Quest - Insomni&#39;hack CTF 2019</title>
    <link>https://cryptax.github.io/2019-03-23-exploitquest/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2019-03-23-exploitquest/</guid>
    <description><![CDATA[This was a different type of challenge, in between regular Escape Rooms/ Geo-caching and CTF.
11 different challenges were scattered nearby the CTF room, and you needed to solve at least 10 of these challenges to be able to recover a code to unlock a safe where you&rsquo;d find a flag for the Exploit Quest.
The challenges weren&rsquo;t too difficult, but I found this rather long and was happy to complete the task with @IdleWog (mushd00m team).]]></description>
</item>
<item>
    <title>Flagdroid - Hack.Lu CTF 2020</title>
    <link>https://cryptax.github.io/2020-10-28-flagdroid/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2020-10-28-flagdroid/</guid>
    <description><![CDATA[Flagdroid  147 solves 153 points Easy Category: Reverse Author: m0ney Text: &ldquo;This app won&rsquo;t let me in without a secret message. Can you do me a favor and find out what it is?&rdquo; Download file: an APK  Analysis of the app We decompile the application. The validation of the flag is done when you press the button check:
1 2 3 4 5 6 7 8 9 10 11 12 13  public void onClick(View arg10) { TextView tvWrong = (TextView)MainActivity.]]></description>
</item>
<item>
    <title>Good old friend - THCon 2021</title>
    <link>https://cryptax.github.io/2021-06-14-thcon-goodold/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>cryptax</author>
    <guid>https://cryptax.github.io/2021-06-14-thcon-goodold/</guid>
    <description><![CDATA[Good old friend The challenge provides an Android APK.
Reversing the APK The main activity of this APK is party.thcon.y2021.level1.MainActivity. Its onCreate() method does the following:
 Anti-debug. If the app is being debugged, display an alert dialog saying &ldquo;Find another way&rdquo; and quit.  1 2 3  if((this.getApplicationInfo().flags &amp; 2) != 0) { this.findanotherway(&#34;App is debuggable&#34;); }   Anti-root. Search for su in the PATH of the system.]]></description>
</item>
</channel>
</rss>
